@page
@model Connect_Four_Server.Pages.Games.DetailsModel
@using Models
@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>GamesTbl</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GamesTbl.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GamesTbl.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GamesTbl.PlayerId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GamesTbl.PlayerId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerTbl.FirstName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PlayerTbl.FirstName)
        </dd> 
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerTbl.LastName)
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PlayerTbl.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GamesTbl.Date)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GamesTbl.Date)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GamesTbl.Winner)
        </dt>
        <dd class="col-sm-10">
            @{
                PlayerTool winner = (PlayerTool)Enum.ToObject(typeof(PlayerTool), Model.GamesTbl.Winner);
                string? winnerStr = Enum.GetName(typeof(PlayerTool), winner);
            }
            @Html.DisplayFor(modelItem => winnerStr)
        </dd>
    </dl>
</div>
<div>
    <a asp-page="./Index">Back to List</a>
</div>
